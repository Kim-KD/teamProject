<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="GH_Mapper">
	<!-- 게스트하우스 리스트 -->
	<select id="testlist" resultType="map">
		<!-- select g.no, g.title, g.content, r.price
		from gh_info g
		left join gh_more_info m on g.no = m.no
		left join gh_room_info r on r.no = m.no -->
		
		select g.no, g.title, g.content, r.price
		from gh_info g
		left join gh_room_info r on g.no = r.no
	</select>
	
	<!-- 게스트 하우스 게시글 총 갯수 -->
	<!-- <select id='gh_Count' resultType='int'>
		select /*+ index_ffs(gh_info
		pk_gh_num)*/ count(*)
		from gh_info
	</select> -->

	<!-- 게스트 하우스 게시글 정보 -->
	<!-- <select id="gh_Find_All" resultType="board"> 
 	<![CDATA[ 
 		select*from 
 			(select gh.*,rownum as rnum from 
 				(select /*+ index_desc(gh_info gh_pk_no)*/  
 				no,user_id userId,title,content,w_date wDate,city,postcode, 
 				address,on_off onOff,p_link pLink,up_view upView,views,likes
 				from gh_info)gh 
 			where rownum<=#{endRowNum})
 		where rnum>=#{startRowNum}
 	]]>
	</select> -->

	<!-- 게스트하우스 게시글 읽기 -->
	<select id="gh_Read" resultType="gh_Board">
		select g.no,g.user_id,title,g.content,city,address,on_off,p_link,up_view,views,likes
		,w_date,postcode,room,room_status,price,photo,room_people,party_menu,alcohol,party_time
		,off_time,join_man,join_girl,party_day,wifi,parking,morning,pet,check_in,check_out
		from gh_room_info r
		left join gh_more_info m on (r.no = m.no)
		left join gh_info g on (m.no = g.no)
		where g.no = #{no} and r.room_status = 1;
	</select>

	<!-- 게스트하우스 게시글 수정(조회수,추천수 상승,게스트 하우스 전체 테이블 포함) -->
	<update id="gh_Update">
		update gh_room_info r
		inner join gh_more_info m on r.no = m.no
		inner join gh_info g on m.no = g.no
		<trim prefix="SET" suffixOverrides=",">
			<if test="title != null">title = #{title},</if>
			<if test="content != null">content = #{content},</if>
			<if test="city != null">city = #{city},</if>
			<if test="address != null">city = #{address},</if>
			<if test="postcode != null">postcode = #{postcode},</if>
			<if test="on_off != null">on_off = #{on_off},</if>
			<if test="p_link != null">p_link = #{p_link},</if>
			<if test="up_view != null">up_view = #{up_view},</if>
			<if test="views > 0">views = views+1,</if>
			<if test="likes > 0">likes = likes+1,</if>
			<if test="room != null">room = #{room},</if>
			<if test="price != null">price = #{price},</if>
			<if test="photo != null">photo = #{photo},</if>
			<if test="room_people != null">room_people = #{room_people},</if>
			<if test="party_menu != null">party_menu = #{party_menu},</if>
			<if test="alcohol != null">alcohol = #{alcohol},</if>
			<if test="party_time != null">party_time = #{party_time},</if>
			<if test="off_time != null">off_time = #{off_time},</if>
			<if test="join_man != null">join_man = #{join_man},</if>
			<if test="join_girl != null">join_girl = #{join_girl},</if>
			<if test="party_day != null">party_day = #{party_day},</if>
			<if test="wifi != null">wifi = #{wifi},</if>
			<if test="parking != null">parking = #{parking},</if>
			<if test="morning != null">morning = #{morning},</if>
			<if test="pet != null">pet = #{pet},</if>
			<if test="check_in != null">check_in = #{check_in},</if>
			<if test="check_out != null">check_out = #{check_out},</if>
		</trim>
		where g.no=#{no} and r.room_status = #{room_status}
	</update>
	
	<!-- 게스트하우스 방 정보 수정 -->
	<update id="gh_Room_Update">
		update gh_room_info
		<trim prefix="SET" suffixOverrides=",">
			<if test="room != null">room = #{room},</if>
			<if test="price != null">price = #{price},</if>
			<if test="photo != null">photo = #{photo},</if>
			<if test="room_people != null">room_people = #{room_people},</if>
		</trim>
		where no=#{no}
	</update>
	
	<!-- 게스트하우스 상세 정보 수정 -->
	<update id="gh_more_Update">
		update gh_more_info
		<trim prefix="SET" suffixOverrides=",">
			<if test="party_menu != null">party_menu = #{party_menu},</if>
			<if test="alcohol != null">alcohol = #{alcohol},</if>
			<if test="party_time != null">party_time = #{party_time},</if>
			<if test="off_time != null">off_time = #{off_time},</if>
			<if test="join_man != null">join_man = #{join_man},</if>
			<if test="join_girl != null">join_girl = #{join_girl},</if>
			<if test="party_day != null">party_day = #{party_day},</if>
			<if test="wifi != null">wifi = #{wifi},</if>
			<if test="parking != null">parking = #{parking},</if>
			<if test="morning != null">morning = #{morning},</if>
			<if test="pet != null">pet = #{pet},</if>
			<if test="check_in != null">check_in = #{check_in},</if>
			<if test="check_out != null">check_out = #{check_out},</if>
		</trim>
		where no=#{no}
	</update>

	<!-- 게스트하우스 게시글 + 후기 삭제 -->
	<delete id="gh_Delete">
		delete gh_info, gh_more_info, gh_room_info, gh_view_info
			from gh_view_info
				left join gh_room_info on (gh_view_info.no = gh_room_info.no)
				left join gh_more_info on (gh_room_info.no = gh_more_info.no)
				left join gh_info on (gh_more_info.no = gh_info.no)
			where gh_view_info.no = #{no}
	</delete>
	
	<!-- ============================================================== -->
	
	<!-- 게스트하우스 정보 작성 -->
	<insert id="gh_Insert" parameterType="gh_Board" useGeneratedKeys="true" keyProperty="no">
		insert into gh_info(user_id, title, content, thumbnail, w_date, 
		postcode, city, address, on_off, p_link, up_view, views, likes)
		values(#{user_id}, #{title}, #{content}, #{thumbnail}, now(), #{postcode}, #{city}, #{address}, "y", "n", "n", 0, 0)
	</insert>

	<!-- 게스트하우스 상세 정보 작성 -->
	<insert id="gh_More_Insert" parameterType="gh_Board">
		insert into gh_more_info(no, party_menu, alcohol, party_time, off_time, join_man, join_girl, 
									party_day, wifi, parking, morning, pet, check_in, check_out)
		values(#{no}, #{party_menu}, #{alcohol}, #{party_time}, #{off_time}, #{join_man}, #{join_girl}, 
				#{party_day}, #{wifi}, #{parking}, #{morning}, #{pet}, #{check_in}, #{check_out})
	</insert>
	
	<!-- 게스트하우스 방 정보 작성 -->
	<insert id="gh_Room_Insert" parameterType="list">
		insert into gh_room_info(no, room, room_status, price, photo, room_people, gender)
		values
		<foreach item="roomList" collection="list" separator=",">
			(#{roomList.no}, #{roomList.room}, #{roomList.room_status}, #{roomList.price}, #{roomList.photo}, #{roomList.room_people}, #{roomList.gender})
		</foreach>
	</insert>
	
	<!-- index 최신순  -->
	<select id="index_New_Slider" resultType="gh_Board">
		select no, title, content, thumbnail from gh_info
		order by w_date desc
		limit 0, 6
	</select>

	<!-- index 조회수  -->
	<select id="index_Views_Slider" resultType="gh_Board">
		select no, title, content, thumbnail from gh_info
		order by views desc
		limit 0, 6
	</select>
	
	<!-- index 추천수  -->
	<select id="index_Likes_Slider" resultType="gh_Board">
		select no, title, content, thumbnail from gh_info
		order by likes desc
		limit 0, 6
	</select>
	
	<!-- 상세보기 페이지 -->
	<select id="gh_details" parameterType="gh_Board" resultType="map">
		select gi.no, gi.user_id, gi.title, gi.content, gi.address, gi.views, gi.likes, ui.user_name, ui.user_radio, ui.user_email,
				gmi.party_day, gmi.party_menu, gmi.party_time, gmi.alcohol, gmi.off_time, gmi.join_man, gmi.join_girl, 
				gmi.wifi, gmi.parking, gmi.morning, gmi.pet, gmi.check_in, gmi.check_out
		from gh_info gi
		left join gh_more_info gmi on (gi.no = gmi.no)
		left join user_info ui on (gi.user_id = ui.user_id)
		where gi.no = #{no}
	</select>
	
	<!-- 방정보 -->
	<select id="room_info_data" parameterType="gh_Board" resultType="map">
		select no, room, price, photo, room_people, gender
		from gh_room_info
		where no = #{no} and room = #{room}
	</select>
	
	<!-- 게스트하우스 후기 작성 -->
	<insert id="gh_View_Insert" parameterType="gh_View">
		insert into gh_view_info(no, user_id, content)
		values(#{no}, #{user_id}, #{content})
	</insert>
	
	<!-- 게스트하우스 후기 읽기(게시글 번호에 맞는 후기 전부 찾는다) -->
	<select id="gh_View_Read" parameterType="gh_View" resultType="gh_view">
		select no, user_id, content
		from gh_view_info
		where no = #{no}
		order by no
	</select>
	
	
</mapper>